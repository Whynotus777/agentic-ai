# Pod Security Standards Configuration
# Enforces restricted security profile with read-only root filesystem and non-root users
---
# Namespace with Pod Security Standards enforced
apiVersion: v1
kind: Namespace
metadata:
  name: production
  labels:
    # Enforce restricted Pod Security Standards
    pod-security.kubernetes.io/enforce: restricted
    pod-security.kubernetes.io/enforce-version: latest
    pod-security.kubernetes.io/audit: restricted
    pod-security.kubernetes.io/audit-version: latest
    pod-security.kubernetes.io/warn: restricted
    pod-security.kubernetes.io/warn-version: latest
    name: production
---
# Agents namespace with strict security
apiVersion: v1
kind: Namespace
metadata:
  name: agents
  labels:
    pod-security.kubernetes.io/enforce: restricted
    pod-security.kubernetes.io/enforce-version: latest
    pod-security.kubernetes.io/audit: restricted
    pod-security.kubernetes.io/audit-version: latest
    pod-security.kubernetes.io/warn: restricted
    pod-security.kubernetes.io/warn-version: latest
    name: agents
---
# Default namespace with baseline security (for development)
apiVersion: v1
kind: Namespace
metadata:
  name: default
  labels:
    pod-security.kubernetes.io/enforce: baseline
    pod-security.kubernetes.io/enforce-version: latest
    pod-security.kubernetes.io/audit: restricted
    pod-security.kubernetes.io/audit-version: latest
    pod-security.kubernetes.io/warn: restricted
    pod-security.kubernetes.io/warn-version: latest
---
# SecurityContextConstraints for OpenShift (if applicable)
apiVersion: v1
kind: SecurityContextConstraints
metadata:
  name: restricted-scc
allowHostDirVolumePlugin: false
allowHostIPC: false
allowHostNetwork: false
allowHostPID: false
allowHostPorts: false
allowPrivilegeEscalation: false
allowPrivilegedContainer: false
allowedCapabilities: []
defaultAddCapabilities: []
fsGroup:
  type: MustRunAs
  ranges:
    - min: 1000
      max: 65535
priority: null
readOnlyRootFilesystem: true
requiredDropCapabilities:
- ALL
runAsUser:
  type: MustRunAsNonRoot
seLinuxContext:
  type: MustRunAs
supplementalGroups:
  type: MustRunAs
  ranges:
    - min: 1000
      max: 65535
users:
- system:serviceaccount:production:*
- system:serviceaccount:agents:*
volumes:
- configMap
- downwardAPI
- emptyDir
- persistentVolumeClaim
- projected
- secret
---
# PodSecurityPolicy (for clusters < 1.25)
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: restricted-psp
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'runtime/default,docker/default'
    apparmor.security.beta.kubernetes.io/allowedProfileNames: 'runtime/default'
    apparmor.security.beta.kubernetes.io/defaultProfileName: 'runtime/default'
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
  - ALL
  volumes:
  - configMap
  - emptyDir
  - projected
  - secret
  - downwardAPI
  - persistentVolumeClaim
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: MustRunAsNonRoot
  runAsGroup:
    rule: MustRunAs
    ranges:
    - min: 1000
      max: 65535
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: MustRunAs
    ranges:
    - min: 1000
      max: 65535
  fsGroup:
    rule: MustRunAs
    ranges:
    - min: 1000
      max: 65535
  readOnlyRootFilesystem: true
  forbiddenSysctls:
  - "*"
---
# ClusterRole for restricted PSP
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: restricted-psp-user
rules:
- apiGroups:
  - policy
  resources:
  - podsecuritypolicies
  verbs:
  - use
  resourceNames:
  - restricted-psp
---
# ClusterRoleBinding for production namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: restricted-psp-production
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: restricted-psp-user
subjects:
- kind: ServiceAccount
  name: default
  namespace: production
- kind: Group
  name: system:serviceaccounts:production
  apiGroup: rbac.authorization.k8s.io
---
# ClusterRoleBinding for agents namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: restricted-psp-agents
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: restricted-psp-user
subjects:
- kind: ServiceAccount
  name: default
  namespace: agents
- kind: Group
  name: system:serviceaccounts:agents
  apiGroup: rbac.authorization.k8s.io
---
# ResourceQuota for production namespace
apiVersion: v1
kind: ResourceQuota
metadata:
  name: production-quota
  namespace: production
spec:
  hard:
    requests.cpu: "50"
    requests.memory: 100Gi
    limits.cpu: "100"
    limits.memory: 200Gi
    persistentvolumeclaims: "20"
    services.loadbalancers: "5"
    services.nodeports: "0"  # Disallow NodePort services
---
# ResourceQuota for agents namespace
apiVersion: v1
kind: ResourceQuota
metadata:
  name: agents-quota
  namespace: agents
spec:
  hard:
    requests.cpu: "100"
    requests.memory: 200Gi
    limits.cpu: "200"
    limits.memory: 400Gi
    persistentvolumeclaims: "50"
    services.loadbalancers: "0"  # No external load balancers for agents
    services.nodeports: "0"
---
# LimitRange for production pods
apiVersion: v1
kind: LimitRange
metadata:
  name: production-limits
  namespace: production
spec:
  limits:
  - max:
      cpu: "4"
      memory: 8Gi
      ephemeral-storage: 10Gi
    min:
      cpu: 50m
      memory: 64Mi
      ephemeral-storage: 100Mi
    default:
      cpu: 500m
      memory: 1Gi
      ephemeral-storage: 1Gi
    defaultRequest:
      cpu: 100m
      memory: 256Mi
      ephemeral-storage: 500Mi
    type: Container
  - max:
      cpu: "8"
      memory: 16Gi
    min:
      cpu: 100m
      memory: 128Mi
    type: Pod
---
# LimitRange for agent pods
apiVersion: v1
kind: LimitRange
metadata:
  name: agents-limits
  namespace: agents
spec:
  limits:
  - max:
      cpu: "8"
      memory: 16Gi
      ephemeral-storage: 20Gi
    min:
      cpu: 100m
      memory: 128Mi
      ephemeral-storage: 500Mi
    default:
      cpu: "1"
      memory: 2Gi
      ephemeral-storage: 2Gi
    defaultRequest:
      cpu: 250m
      memory: 512Mi
      ephemeral-storage: 1Gi
    type: Container
  - max:
      cpu: "16"
      memory: 32Gi
    type: Pod
---
# Example Pod template that meets restricted security requirements
apiVersion: v1
kind: ConfigMap
metadata:
  name: secure-pod-template
  namespace: production
data:
  pod-template.yaml: |
    apiVersion: v1
    kind: Pod
    metadata:
      name: secure-app
      namespace: production
      labels:
        app: secure-app
        networking/allow-egress: "true"
        networking/allow-ingress: "true"
        monitoring/prometheus-scrape: "true"
    spec:
      # Service account with minimal permissions
      serviceAccountName: app-service-account
      automountServiceAccountToken: false
      
      # Pod-level security context
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
        runAsGroup: 65532
        fsGroup: 65532
        fsGroupChangePolicy: "OnRootMismatch"
        seccompProfile:
          type: RuntimeDefault
        supplementalGroups: [65532]
      
      # Init container for setup with read-write temp mount
      initContainers:
      - name: setup
        image: busybox:1.36
        command: ["/bin/sh", "-c"]
        args:
        - |
          echo "Setting up application environment..."
          cp /config/* /shared-config/
          echo "Setup complete"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: config
          mountPath: /config
          readOnly: true
        - name: shared-config
          mountPath: /shared-config
        resources:
          requests:
            memory: "32Mi"
            cpu: "10m"
          limits:
            memory: "64Mi"
            cpu: "50m"
      
      containers:
      - name: app
        image: registry.internal/app:v1.0.0
        imagePullPolicy: Always
        
        # Container-level security context
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          runAsGroup: 65532
          capabilities:
            drop:
            - ALL
        
        # Environment variables for proxy and shared contracts
        env:
        - name: HTTP_PROXY
          value: "http://egress-proxy.egress-system.svc.cluster.local:3128"
        - name: HTTPS_PROXY
          value: "http://egress-proxy.egress-system.svc.cluster.local:3128"
        - name: NO_PROXY
          value: ".cluster.local,.svc,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
        - name: REQUIRED_HEADERS
          value: "Idempotency-Key,X-Tenant-ID"
        - name: ERROR_CODES
          value: "RATE_LIMIT_EXCEEDED,BUDGET_EXCEEDED,SCHEMA_VALIDATION_FAILED,UNAUTHORIZED,FORBIDDEN,CONFLICT,RETRY_LATER,INVARIANT_VIOLATION,POLICY_BLOCKED,HITL_REQUIRED"
        
        # Resource limits and requests
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
            ephemeral-storage: "500Mi"
          limits:
            memory: "512Mi"
            cpu: "500m"
            ephemeral-storage: "1Gi"
        
        # Volume mounts for writable directories
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/cache
        - name: run
          mountPath: /var/run
        - name: shared-config
          mountPath: /app/config
          readOnly: true
        
        # Ports
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        
        # Health checks
        livenessProbe:
          httpGet:
            path: /health/live
            port: http
            httpHeaders:
            - name: X-Probe-Type
              value: liveness
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health/ready
            port: http
            httpHeaders:
            - name: X-Probe-Type
              value: readiness
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        
        startupProbe:
          httpGet:
            path: /health/startup
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 30
      
      # Volumes for writable directories (emptyDir)
      volumes:
      - name: tmp
        emptyDir:
          sizeLimit: 100Mi
      - name: cache
        emptyDir:
          sizeLimit: 500Mi
      - name: run
        emptyDir:
          sizeLimit: 50Mi
      - name: shared-config
        emptyDir:
          sizeLimit: 10Mi
      - name: config
        configMap:
          name: app-config
          defaultMode: 0644
      
      # Node affinity and topology
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/worker
                operator: Exists
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - secure-app
              topologyKey: kubernetes.io/hostname
      
      # Topology spread for high availability
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app: secure-app
      
      # DNS and hostname settings
      dnsPolicy: ClusterFirst
      enableServiceLinks: false
      
      # Tolerations if needed
      tolerations:
      - key: "workload"
        operator: "Equal"
        value: "production"
        effect: "NoSchedule"